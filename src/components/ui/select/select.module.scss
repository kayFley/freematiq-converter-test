.selectTrigger {
	border: 1px solid var(--input);
	color: var(--foreground);
	display: flex;
	height: 2.25rem;
	width: 100%;
	min-width: 6rem;
	cursor: pointer;
	align-items: center;
	justify-content: space-between;
	gap: 0.5rem;
	border-radius: calc(infinite * 1px);
	background-color: transparent;
	padding: 0.5rem 0.75rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	box-shadow:
		0 10px 15px -3px rgba(0, 0, 0, 0.1),
		0 4px 6px -4px rgba(0, 0, 0, 0.1),
		inset 0 1px rgba(255, 255, 255, 0.15);
	transition:
		color 150ms cubic-bezier(0.4, 0, 0.2, 1),
		box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1);
	outline: none;

	&:focus-visible {
		border-color: var(--ring);
		box-shadow: 0 0 0 3px rgba(var(--ring), 0.5);
	}

	&:disabled {
		cursor: not-allowed;
		opacity: 0.5;
	}

	svg {
		pointer-events: none;
		flex-shrink: 0;
	}

	.invalidIcon {
		color: rgba(220, 38, 38, 0.8);
	}

	&[data-placeholder] {
		color: var(--muted-foreground);
	}

	&[aria-invalid='true'] {
		border-color: var(--destructive);
		box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.2);
	}

	> [data-slot='select-value'] {
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	> span {
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: 1;
		line-clamp: 1;
		overflow: hidden;
	}
}

.selectContent {
	border: 1px solid var(--input);
	background-color: var(--popover);
	color: var(--popover-foreground);
	position: relative;
	z-index: 50;
	max-height: min(24rem, var(--radix-select-content-available-height));
	min-width: 8rem;
	overflow: hidden;
	border-radius: 0.375rem;
	box-shadow:
		0 10px 15px -3px rgba(0, 0, 0, 0.1),
		0 4px 6px -2px rgba(0, 0, 0, 0.05);

	.group {
		padding: 0.25rem 0;
	}

	.popper {
		width: 100%;
		min-width: var(--radix-select-trigger-width);
	}

	$states: (
		'open': fadeIn 150ms ease-out,
		'closed': fadeOut 150ms ease-in,
	);

	@each $state, $animation in $states {
		&[data-state='#{$state}'] {
			animation: #{$animation};
		}
	}

	$sides: (
		'bottom': slideInFromTop,
		'top': slideInFromBottom,
		'left': slideInFromRight,
		'right': slideInFromRight,
	);

	@each $side, $animation-name in $sides {
		&[data-side='#{$side}'] {
			animation-name: #{$animation-name};
		}
	}

	$transforms: (
		'bottom': translateY(0.25rem),
		'top': translateY(-0.25rem),
		'left': translateX(-0.25rem),
		'right': translateX(0.25rem),
	);

	@each $side, $transform in $transforms {
		&[data-side='#{$side}'] {
			animation-name: #{$transform};
		}
	}
}

.selectViewport {
	display: flex;
	flex-direction: column;
	gap: 0.25rem;
	padding: 0.25rem;

	&.popper {
		height: var(--radix-select-trigger-height);
	}
}

.selectItem {
	position: relative;
	display: flex;
	width: 100%;
	cursor: pointer;
	align-items: center;
	border-radius: 0.375rem;
	padding: 0.375rem 0.5rem 0.375rem 2rem;
	font-size: 0.875rem;
	line-height: 1.25rem;
	outline: none;
	user-select: none;

	&:focus {
		background-color: rgba(255, 255, 255, 0.05);
		color: var(--accent-foreground);
	}

	&[data-disabled] {
		pointer-events: none;
		opacity: 0.5;
	}
}

.selectItemIndicator {
	position: absolute;
	left: 0.5rem;
	display: flex;
	width: 0.875rem;
	height: 0.875rem;
	align-items: center;
	justify-content: center;

	svg {
		color: var(--muted-foreground);
		opacity: 0.8;
	}
}

.dark {
	.selectItem:focus {
		background-color: rgba(var(--accent), 0.8);
	}
	.selectTrigger[aria-invalid='true'] {
		box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.4);
	}
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

@keyframes fadeOut {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

@keyframes slideInFromTop {
	from {
		transform: translateY(-0.5rem);
	}
	to {
		transform: translateY(0);
	}
}

@keyframes slideInFromBottom {
	from {
		transform: translateY(0.5rem);
	}
	to {
		transform: translateY(0);
	}
}

@keyframes slideInFromLeft {
	from {
		transform: translateX(-0.5rem);
	}
	to {
		transform: translateX(0);
	}
}

@keyframes slideInFromRight {
	from {
		transform: translateX(0.5rem);
	}
	to {
		transform: translateX(0);
	}
}
